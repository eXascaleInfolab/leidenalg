# Configuration file for the automatic generation of the Leiden input options parsing

package "leiden"
version "0.7"

purpose "Clusters (detects communities in) the un/weighted undirected input network (graph)"

#usage "leiden [OPTIONS] input_network"
description "input_network  - the input graph specified as either in the NSL (NSA/E) format, which is an extension of the NCOL format."

# Input
option  "inp-fmt" i   "format of the input graph (Network Specified by Ars/Edges, i.e., Directed/Undirected)"  values="NSA","NSE" enum
option  "seed" s   "random seed"  long  # default="0"
# Processing params
option  "gamma" g  "resolution parameter gamma"  float default="1.0"
option  "optim-iters" - "number of the optimization iterations"  short default="2"
# Output
option  "res-fmt" r  "format of the results: root level clusters or all levels, each in the dedicated file"  values="ROOT","LEVS" enum  default="ROOT"
option  "output" o  "output file name"  string  required

args "--default-optional --unamed-opts=input_network"   # Allow input files to be unnamed parameters


# Basic structure, see https://www.gnu.org/software/gengetopt/gengetopt.html#Basic-Usage
#     package "<packname>"
#     version "<version>"
#     purpose "<purpose>"
#     usage "<usage>"
#     description "<description>"
#     versiontext "<versiontext>"
#
#     args "<command line options>"
#
#     option <long> <short> "<desc>"
#         {details="<detailed description>"}
#         {argtype} {typestr="<type descr>"}
#         {values="<value1>","<value2>",...}
#         {default="<default value>"}
#         {dependon="<other option>"}
#         {required} {argoptional} {multiple}
#         {hidden}
#
#     option <long> <short> "<desc>" flag <on/off>
#
#     section "section name" {sectiondesc="optional section description"}
#
#     text "a textual sentence"
#
#
# Mutually exclusive options should belong to a group:
#
#     defgroup "<group name>" {groupdesc="<group description>"} {required}
#     groupoption <long> <short> "<desc>" <argtype> group="<group name>" \
#          {argoptional} {multiple}
#
#     defgroup "my grp2"
#     defgroup "grp1" groupdesc="an option of this group is required" required
#     groupoption "opta" a "string a" group="grp1" multiple
